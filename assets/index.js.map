{
  "version": 3,
  "sources": ["../../src/start.ts", "../../src/assets/security/hashes.ts", "../../src/components/useURL.func.ts", "../../src/index.ts"],
  "sourcesContent": ["import './assets/css/app.css';\nimport useURL from './components/useURL.func';\n\nexport default async function Start(DOM: HTMLElement): Promise<void> {\n    \n    DOM.innerHTML = (`\n            <div>\n                <input type='text' id='input-el' placeholder='&#128270; https://apple.domain.com'>\n                <button id=\"input-btn\">SAVE INPUT</button>\n                <button id=\"cls-btn\">CLEAR ALL</button>\n                <div id='wrapper-el' class='wrapper'>\n                    <p>List of urls</p>\n                    <ul id='ul-el'></ul>\n                </div>\n                <div id='error'>\n                </div>\n            </div>\n            `)\n\n    useURL()\n}\n", "const GenerateHashes = new Set();\n\nexport default function UniqueHash() {\n    let hash;\n    do {\n        hash = Math.random().toString(36).substring(2);\n    } while (GenerateHashes.has(hash));\n    GenerateHashes.add(hash);\n    return hash;\n}", "\nexport default function useURL() {\n\n    \n    let myLeads: string[] = [];\n    const inputEl = document.getElementById('input-el') as HTMLInputElement | null;\n    const ulEl = document.getElementById('ul-el') as HTMLUListElement | null;\n    const inputBTN = document.getElementById('input-btn') as HTMLButtonElement | null;\n    const deleteBTN = document.getElementById('cls-btn') as HTMLButtonElement | null;\n    const wrapperDiv = document.getElementById('wrapper-el') as HTMLDivElement | null;\n    const errorDiv = document.getElementById('error') as HTMLDivElement | null;\n\n    inputBTN?.addEventListener('click', () => {\n        Listener()\n    });\n    inputEl?.addEventListener('keydown', (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            Listener()\n        }\n    });\n\n    deleteBTN?.addEventListener('click',()=>{\n        localStorage.removeItem('myLeads')\n        renderLeads()\n    })\n    \n    if(!myLeads.length){\n        wrapperDiv!.style.display = 'none'\n    }\n    \n    function applyStyling(text: string): string {\n        let result = text.startsWith('https://') ?\n            `<span class='secure'>https:</span><span class='slashes'>//</span><span class='domain_name'>${text.substring(8)}</span>` :\n            `https:<span class='slashes'>//</span><span class='name-ph'>${text}`;\n    \n        const extensions = ['.com', '.net', '.org', '.app', '.edu', '.vercel', '.ph', '.github', '.dev', '.netlify'];\n        for (const extension of extensions) {\n            if (result.includes(extension)) {\n                const parts = result.split(extension);\n                let colorClass = '';\n                \n                if (extension === '.net' || extension === '.netlify') {\n                    colorClass = 'name-net'; \n                } else {\n                    colorClass = `name-${extension.slice(1)}`;\n                }\n    \n                result = `<span class='name'>${parts[0]}</span><span class='${colorClass}' style='color: ${getUniqueColor(extension)};'>${extension}</span>`;\n                \n                if (parts[1]) {\n                    result += `<span class=\"domain_name\">${parts[1]}</span>`;\n                }\n                \n                break;\n            }\n        }\n    \n        return `<span>${result}</span>`;\n    }\n\n    function getUniqueColor(extension: string): string {\n        const colorMap: Record<string, string> = {\n            '.com': 'lightblue',\n            '.net': 'blueviolet',\n            '.org': 'cyan',\n            '.app': 'green',\n            '.edu': 'lightgreen',\n            '.vercel': 'yellow',\n            '.netlify':'red',\n            '.ph': 'orange',\n            '.github': 'lightgreen',\n            '.dev': 'blue',\n            '.js': 'goldenrod'\n        };\n\n        return colorMap[extension] || 'black';\n    }\n\n    function isValidURL(url: string): boolean {\n        try {\n            const parsedUrl = new URL(`http://${url}`);\n            const urlPathname = parsedUrl.pathname.toLowerCase();\n            const validExtensions = ['.com', '.net', '.org', '.app', '.edu', '.vercel', '.ph','.github','.io','.dev','.js'];\n    \n            const isValidExtension = validExtensions.some((extension) => urlPathname.endsWith(extension.toLowerCase()));\n            return isValidExtension;\n        } catch (error) {\n            console.error(\"Error validating URL:\", error);\n            inputEl!.value = '';\n            return false;\n        }\n    }\n    \n    function Listener() {\n        errorDiv!.style.display = 'block';\n\n        let inputValue = `${inputEl!.value.trim()}`;\n        inputValue = inputValue.replace(/^https?:\\/\\//i, '');\n\n        if (inputValue === '') {\n            showError('Please ensure it is not left empty');\n            return;\n        }\n\n        const inputFormat = `https://${inputValue}`;\n\n        if (!isValidURL(inputFormat)) {\n            inputEl!.value = '';\n            showError('Please enter a valid URL with a supported extension');\n            return;\n        }\n\n        if (myLeads.some((url) => url.toLowerCase() === inputValue.toLowerCase())) {\n            showError('URL already exists');\n            return;\n        }\n\n        myLeads.push(inputValue.toLowerCase());\n\n        // Save myLeads to localStorage after adding a new item\n        saveToLocalStorage();\n\n        if (myLeads.length) {\n            inputEl!.value = '';\n            wrapperDiv!.style.display = 'block';\n            errorDiv!.style.display = 'none';\n            renderLeads();\n        } else {\n            showError('No valid URLs to display');\n            wrapperDiv!.style.display = 'none'\n        }\n    }\n\n    function getItemLeads(): string {\n        let getItems = localStorage.getItem('myLeads');\n        if (!getItems) {\n            wrapperDiv!.style.display = 'none';\n        } else {\n            wrapperDiv!.style.display = 'block';\n        }\n        return getItems ? getItems : '';\n    }\n    \n    function createListItem(url: string, index: number): string {\n        return `<li id='${index}'>\n                    <a id='link' href='https://${url}' target='_blank'>\n                        <pre>${applyStyling(url)}</pre>\n                    </a>\n                    <input type='button' class='remove' id='remove' data-index='${index}' value='remove'>\n                </li>`;\n    }\n    \n    function createListOfItems(items: string[]): string {\n        return items.map((url, index) => createListItem(url, index + 1)).join('');\n    }\n    \n    function renderLeads() {\n        const getItems = getItemLeads();\n        if (getItems) {\n            myLeads = JSON.parse(getItems);\n    \n            // Check if myLeads is defined and not empty\n            if (Array.isArray(myLeads) && myLeads.length > 0) {\n                // Render leads using the updated myLeads array\n                ulEl!.innerHTML = createListOfItems(myLeads);\n    \n                // Use event delegation for remove buttons after rendering the leads\n                ulEl!.addEventListener('click', (event) => {\n                    const target = event.target as HTMLElement;\n                    if (target.id === 'remove' && target.parentElement) {\n                        const targetIndex = target.getAttribute('data-index');\n                        if (targetIndex !== null) {\n                            const indexToRemove = parseInt(targetIndex, 10);\n                            // Remove the corresponding <li> element from the DOM\n                            const liToRemove = document.getElementById(indexToRemove.toString());\n                            if (liToRemove) {\n                                liToRemove.remove();\n                            } \n                            // Optionally: Remove the item from the array and update localStorage\n                            myLeads = myLeads.filter((_, index) => index !== indexToRemove - 1);\n                            localStorage.setItem('myLeads', JSON.stringify(myLeads));\n                        if(!myLeads.length){\n                            ulEl!.innerHTML = (`<li>No urls found</li>`)\n                        }\n                        }\n                    }\n                });\n            } else {\n                // Handle the case when myLeads is an empty array\n                ulEl!.innerHTML = ''; // Clear the inner HTML\n                wrapperDiv!.style.display = 'none'\n            }\n        }\n    }\n    \n    \n    \n    function showError(errorMessage: string) {\n        errorDiv!.innerHTML = `<ul class='error'><li>${errorMessage}</li></ul>`;\n        inputEl!.value = '';\n        inputEl!.style.border = '1px solid red';\n        setTimeout(() => {\n            errorDiv!.innerHTML = ''; // Clear error message\n            inputEl!.style.border = 'none';\n        }, 2000);\n    }\n    \n    function saveToLocalStorage() {\n        localStorage.setItem('myLeads', JSON.stringify(myLeads));\n    }\n    \n    \n\n    // Initial render\n    renderLeads();\n    window.addEventListener('load', renderLeads);\n}", "import './assets/css/index.css';\n\n// Lazy loads \n\nconst loadStart = async () => {\n    const module = await import('./start');\n    return module.default;\n};\n\nconst loadUniqueHash = async () => {\n    const module = await import('./assets/security/hashes');\n    return module.default;\n};\n\n\nconst DOM = document.querySelector('#app') as HTMLElement;\n\nPromise.all([loadStart(), loadUniqueHash()]).then(([Start, UniqueHash]) => {\n    DOM.id = UniqueHash();\n    Start(DOM);\n});\n\n// Typescript Webpack 5.88.1 Lazy loads"],
  "mappings": "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",
  "names": []
}
